/* ======= This document describes deployment actions for OpenGeoProver project ======= */

A. INSTRUCTIONS FOR EXECUTING JAR FILE
	[First of All: 
		make sure java is properly installed at your
		computer - you need at least jdk1.6.0_23; 
		also check whether <jdk_path>/bin is in PATH user environment variable
		and whether <jdk_path>/jre/bin is in CLASSPATH system environment variable
		of your operating system.]
	1. Unpack 'OpenGeoProver.jar' file (e.g. with 7-Zip archiver or by using jar tool).
	2. In unpacked directory there is 'misc' sub-directory.
		Find '3rd_party_libs' sub-directory in 'misc' directory and copy it
		to same directory where 'OpenGeoProver.jar' file is placed.
	3. In 'misc/documentation' directory there is 'scripts' sub-directory.
		Copy this sub-directory to same directory where 'OpenGeoProver.jar' file resides.
		There can be found necessary script for running OpenGeoProver.
	4. For various examples there are input files in 'misc/documentation/testing_and_reports'
		directory.
	5. Instead of all these steps, there is installation script that prepares directories
		for running OpenGeoProver application.
	
	
B. INSTRUCTIONS FOR EXTRACTING AND COMPILING SOURCE CODE
	1. This project was developed in Eclipse SDK (Version: 3.6.1).
	2. Complete source code for the project can be found in 'misc/src'
		directory of unpacked jar file, obtained as described in step A.1.
	3. In order to successfully compile source code in Eclipse, 
		project build path has to be configured to include provided
		3rd party libraries in project libraries. These additional libraries
		can be obtained as described in step A.2.
	4. Beside these libraries at least following additional libraries have to
		be added in project libraries when configuring Eclipse build path:
			plugin.jar (from <jdk_path>/jre/lib directory)
			plugin.jar (from jre6/lib directory)
			ant.jar (from eclipse/plugins/org.apache.ant_1.7.1.v20100518-1145/lib directory)
	5. In order to be able to create new 'OpenGeoProver.jar' file use configuration files
		from 'misc/config' directory of unpacked jar file, and add them to Eclipse project.
	   

