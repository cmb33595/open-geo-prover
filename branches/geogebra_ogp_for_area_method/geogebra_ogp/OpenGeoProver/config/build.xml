<project name="OGPForAreaMethodForGeoGebra" default="dist" basedir=".">
	
	<!-- Set global properties for this build -->
	<property file="build.properties"/>
	
	<!-- Setting project classpath -->
	<path id="project.classpath">
		<!-- First of all use CLASSPATH environment variable -->
		<pathelement path="${classpath}"/>
		<!-- Add third party libs -->
		<fileset dir="${3rd_party_libs.path}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<!-- Classpath for JUnit test -->
	<path id="jutest.classpath">
		<!-- First of all use project path -->
		<path refid="project.classpath"/>
		<!-- Here add other necessary locations/paths/pathelements -->
	</path>
	
	
	
	<!--
	  Targets in order of dependency
	  -->
	
	<target name="clean"
			description="clean up" >
		<!-- Delete the ${build.path} and ${dist.path} directory trees -->
		<delete dir="${build.path}"/>
		<delete dir="${dist.path}"/>
		<delete dir="${javadoc.path}"/>
	</target>
	
	<target name="init" depends="clean">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.path}"/>
		<!-- Create the distribution directory -->
		<mkdir dir="${dist.path}"/>
		<!-- Create the javadoc documentation directory -->
		<mkdir dir="${javadoc.path}"/>
	</target>
	
	<!-- Tasks for JUnit testing -->
	<target name="jutest-clean">
		<!-- Delete the ${jutest.path} directory tree -->
		<delete dir="${jutest.path}"/>
	</target>
	
	<target name="jutest-init" depends="jutest-clean">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${jutest.path}"/>
		<mkdir dir="${jutest.data.path}"/>
		<mkdir dir="${jutest.reports.path}"/>
	</target>
		
	<target name="jutest-compile" depends="jutest-init">
		<!-- Compile JUnit tests -->
		<javac srcdir="${jutest.src.path}" destdir="${jutest.path}" debug="on" debuglevel="lines,vars,source" source="1.5">
			<!-- Add source dependencies -->
			<sourcepath>
				<pathelement path="${src.path}"/>
			</sourcepath>
			<!-- Set classpath -->
			<classpath refid="jutest.classpath" />
			<!-- Exclude template files -->
			<exclude name="**/*Template.java"/>
		</javac>
	</target>
		
	<target name="jutest-run" depends="jutest-compile">
		<!-- Execute JUnit tests -->
		<junit printsummary="false"
			   errorProperty="jutest.failed"
		       failureProperty="jutest.failed"
			   fork="on"
			   dir="${build.path}">
			<classpath>
				<path refid="jutest.classpath"/>
				<pathelement path="${jutest.path}"/>
				<pathelement path="${jutest.class.path}"/>
			</classpath>
			<formatter type="brief" usefile="false"/>
			<formatter type="xml"/>
			<!--
			<test todir="${jutest.data.path}" name="com.ogprover.test.junit.JUTestPower"/>
			-->
			<batchtest todir="${jutest.data.path}">
				<fileset dir="${jutest.path}" includes="com/ogprover/test/junit/JUTest*Suite*.class"/>
			</batchtest>
		</junit>
		
		<!-- Make JUnit test report -->
		<junitreport todir="${jutest.data.path}">
			<fileset dir="${jutest.data.path}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${jutest.reports.path}"/>
		</junitreport>
		
		<fail message="JUnit tests failed. Check log and/or reports." if="jutest.failed"/>
	</target>

	<target name="compile" depends="init,jutest-run"
			description="compile the source " >
		<!-- Compile the java code from ${src.path} into ${build.path} -->
		<javac srcdir="${src.path}" destdir="${build.path}" debug="on" debuglevel="lines,vars,source" source="1.5">
			<classpath refid="project.classpath" />
			<!-- Exclude test files -->
			<exclude name="**/*Test*.java"/>
			<!-- Exclude template files -->
			<exclude name="**/*Template.java"/>
		</javac>
		
		<!-- Generate Javadoc documentation -->
		<javadoc destdir="${javadoc.path}"
		         author="true"
		         version="true"
		         use="true"
				 useexternalfile="true" 
				 private="true"
		         windowtitle="OpenGeoProver Javadoc">
			<classpath refid="project.classpath" />
			<fileset dir="${src.path}" defaultexcludes="yes">
			</fileset>

		    <doctitle><![CDATA[<h1>OGP API Documentation</h1>]]></doctitle>
		    <bottom><![CDATA[<i>OpenGeoProver Project</i>]]></bottom>
		</javadoc>
	</target>

	<target name="dist" depends="compile"
			description="generate the distribution" >
		<!-- Create temporary directories and copy files into them -->
		<mkdir dir="${temp.path}"/>
			<copy todir="${temp.path}">
				<fileset dir="${build.path}">
					<exclude name="**/${jutest.dirname}/**"/>
				</fileset>
			</copy>
		<mkdir dir="${temp.misc.path}"/>
		<mkdir dir="${temp.src.path}"/>
			<copy todir="${temp.src.path}">
				<fileset dir="${src.path}" />
			</copy>
		<mkdir dir="${temp.config.path}"/>
			<copy todir="${temp.config.path}">
				<fileset dir="${config.path}" />
			</copy>
		<mkdir dir="${temp.documentation.path}"/>
			<copy todir="${temp.documentation.path}">
				<fileset dir="${documentation.path}" />
			</copy>
		<mkdir dir="${temp.path2}"/>
			<copy todir="${temp.path2}">
				<fileset dir="${build.path}">
					<exclude name="**/${jutest.dirname}/**"/>
				</fileset>
			</copy>

		<!-- Put whole ${temp.path} directory into the ${dist.jar.filename} file -->
		<jar jarfile="${dist.path}/${dist.jar.filename}" manifest="${manifest.filename}" basedir="${temp.path}"/>
		<!-- Put whole ${temp.path2} directory into the ${dist.minjar.filename} file -->
		<jar jarfile="${dist.path}/${dist.minjar.filename}" manifest="${manifest.filename}" basedir="${temp.path2}"/>
		
		<!-- At the end delete temporary directories -->
		<delete dir="${temp.path}"/>
		<delete dir="${temp.path2}"/>
	</target>
	
</project>
